name:  CI/CD

on: push

jobs:
  changes:
    runs-on: ubuntu-latest
    # Set job outputs to values from filter step
    outputs:
      lpath: ${{ steps.filter.outputs.lpath }}
      alias: ${{ steps.filter.outputs.alias }}
    steps:
    # For pull requests it's not necessary to checkout the code
    - uses: actions/checkout@v3
      with:
        # This may save additional git fetch roundtrip if
        # merge-base is found within latest 20 commits
        fetch-depth: 20
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        base: ${{ github.ref }}
        filters: |
          lpath:
            - 'rym-lpath/**'
          alias:
            - 'rym-alias/**'
  rym-alias-test:
    needs: changes
    if: ${{ needs.changes.outputs.alias == 'true' }}
    uses: ./.github/workflows/test-pdm.yaml
    with:
      target: rym-alias
  rym-alias-build-publish:
    needs: [changes, rym-alias-test]
    if: ${{ needs.changes.outputs.alias == 'true' || startsWith(github.event.head_commit.message, 'build') }}
    uses: ./.github/workflows/publish-to-pypi.yaml
    with:
      target: rym-alias
    secrets:
      TEST_PYPI_API_TOKEN: ${{ secrets.TEST_PYPI_API_TOKEN }}
      PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
  rym-lpath-test:
    needs: changes
    if: ${{ needs.changes.outputs.lpath == 'true' }}
    uses: ./.github/workflows/test-pdm.yaml
    with:
      target: rym-lpath
  rym-lpath-build-publish:
    needs: [changes, rym-lpath-test]
    if: ${{ needs.changes.outputs.lpath == 'true' || startsWith(github.event.head_commit.message, 'build') }}
    uses: ./.github/workflows/publish-to-pypi.yaml
    with:
      target: rym-lpath
    secrets:
      TEST_PYPI_API_TOKEN: ${{ secrets.TEST_PYPI_API_TOKEN }}
      PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
