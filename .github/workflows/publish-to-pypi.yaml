name: Publish Python distributions to PyPI and TestPyPI

on:
  workflow_call:
    inputs:
      target:
        required: true
        type: string
      test-pypi:
        description: 'Publish to test PyPI'
        required: false
        type: boolean
        default: false
      real-pypi:
        description: 'Publish to PyPI'
        required: false
        type: boolean
        default: true
    secrets:
      TEST_PYPI_API_TOKEN:
        required: true
      PYPI_API_TOKEN:
        required: true
  workflow_dispatch:
    inputs:
      target:
        description: 'The target project'
        required: true
      test-pypi:
        description: 'Publish to test PyPI'
        required: true
        type: boolean
        default: false
      real-pypi:
        description: 'Publish to PyPI'
        required: true
        type: boolean
        default: true

jobs:
  build-n-publish:
    name: build and publish
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./${{ inputs.target }}
    steps:
    - uses: actions/checkout@master
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install pypa/build
      run: >-
        python -m
        pip install
        build
        --user
    - name: Build wheel and sdist
      run: >-
        python -m
        build
        --sdist
        --wheel
        --outdir dist/
        .
    - name: Publish distribution to Test PyPI
      if: ${{ inputs.test_pypi || !startsWith(github.ref, 'refs/tags') }}
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{secrets.TEST_PYPI_API_TOKEN}}
        repository_url: https://test.pypi.org/legacy/
        packages_dir: ${{ inputs.target }}/dist
        skip-existing: true
    - name: Publish distribution to PyPI
      if: ${{ inputs.real_pypi || startsWith(github.ref, 'refs/tags') }}
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        packages_dir: ${{ inputs.target }}/dist/